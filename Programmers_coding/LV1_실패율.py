# -*- coding: utf-8 -*-
"""46.실패율

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Qvae0_owBqlxqwUsBL1QivTisFM-j2si
"""

# 첫번째 풀이
# 한가지 테스트케이스에 대해서 시간초과 발생

def solution(N, stages):
    answer = []

    sil = {i: 0 for i in range(1,N+2)}
    st = {i: 0 for i in range(1,N+2)}

    for i in stages:
        sil[i] += 1
        for j in range(1, i+1):
            st[j] += 1

    aa = []
    cnt = 0
    for i, j in zip(sil.keys(), st.keys()):
        cnt += 1
        if cnt <= N:
            if st[j] != 0:
                tmp = sil[i] / st[i]
                aa.append([tmp, cnt])
            else:
                aa.append([0, cnt])

    aa.sort(key=lambda x: (x[0], -x[1]) , reverse = True)

    aaa = [aa[i][1] for i in range(N)]
    return aaa

print(solution(5, [2, 1, 2, 6, 2, 4, 3, 3]))
print(solution(4, [4,4,4,4,4]))

def solution(N, stages):
    answer = {}
    length = len(stages)
    
    for i in range(1, N+1):
        cnt = 0
        for j in stages:
            if j >= i:
                cnt += 1
        if cnt == 0:
            answer[i] = 0
        else:
            answer[i] = stages.count(i) / cnt
            
    return sorted(answer, key = lambda x: -answer[x])

print(solution(5, [2, 1, 2, 6, 2, 4, 3, 3]))
print(solution(4, [4,4,4,4,4]))