# -*- coding: utf-8 -*-
"""알고리즘TA_5주_실습문제.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WPrvJLYseLg0tHQKchItKirsUC2uFxyT

merge_sort 구현
"""

def merge_sort(arr):
    if len(arr) < 2:
        return arr

    mid = len(arr) // 2
    low_arr = merge_sort(arr[:mid])
    high_arr = merge_sort(arr[mid:])

    merged_arr = []
    l = h = 0
    while l < len(low_arr) and h < len(high_arr):
        if low_arr[l] < high_arr[h]:
            merged_arr.append(low_arr[l])
            l += 1
        else:
            merged_arr.append(high_arr[h])
            h += 1
    merged_arr += low_arr[l:]
    merged_arr += high_arr[h:]
    return merged_arr

"""quick_sort 구현"""

def quick_sort(arr):
    if len(arr) <= 1:
        return arr
    pivot = arr[len(arr) // 2]
    lesser_arr, equal_arr, greater_arr = [], [], []
    for num in arr:
        if num < pivot:
            lesser_arr.append(num)
        elif num > pivot:
            greater_arr.append(num)
        else:
            equal_arr.append(num)
    return quick_sort(lesser_arr) + equal_arr + quick_sort(greater_arr)

a = [2,5,3,9,1]
print(merge_sort(a))
print(quick_sort(a))

"""실습문제"""

#백준 1629 실버1
a,b,c = map(int, input().split())

def multi (a,n):
  if n == 1:
      return a%c
  else:
      tmp = multi(a,n//2)
      if n %2 ==0:
          return (tmp * tmp) % c
      else:
          return (tmp  * tmp *a) %c
          
print(multi(a,b))

#백준 1992 실버1
n = int(input())
graph = [list(map(int, input())) for _ in range(n)]


def dnc(x, y, n):
    check = graph[x][y]
    for i in range(x, x + n):
        for j in range(y, y + n):
            if check != graph[i][j]:
                check = -1
                break

    if check == -1:
        print("(", end='')
        n = n // 2
        dnc(x, y, n)  # 오른쪽 위
        dnc(x, y + n, n)  # 왼쪽 위
        dnc(x + n, y, n)  # 오른쪽 아래
        dnc(x + n, y + n, n)  # 왼쪽 아래
        print(")", end='')

    elif check == 1:
        print(1, end='')
    else:
        print(0, end='')


dnc(0, 0, n)

#프로그래머스 LV1 K번째수
def solution(array, commands):
    answer = []

    for i in range(len(commands)):
        array1 = sorted(array[commands[i][0]-1:commands[i][1]])
        answer.append(array1[commands[i][2]-1])

    return answer

#프로그래머스 LV2 가장 큰 수

numbers = list(map(str, input().split()))
numbers.sort(key=lambda x : x*3, reverse = True)
print(str(int(''.join(numbers))))