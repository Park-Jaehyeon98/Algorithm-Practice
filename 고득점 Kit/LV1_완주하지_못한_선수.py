# -*- coding: utf-8 -*-
"""LV1.완주하지 못한 선수

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11FKCo1GcM4SdT8WPByVj8Gd31Hbj9us3
"""

# 첫번째 풀이
# 딕셔너리를 사용하여 풀려고 했지만 시간초과로 인해 다른 방법을 사용함.

def solution(participant, completion):
    answer = ''

    dic = {string : 0 for string in completion}

    for i in dic.keys():
        for j in participant:
            if i == j:
                dic[i] += 1

            if j not in dic.keys():
                return j
    
    for i in dic.items():
        if i[1] != 1:
            return i[0]

print(solution(["leo", "kiki", "eden"], ["eden", "kiki"]))
print(solution(["marina", "josipa", "nikola", "vinko", "filipa"], ["josipa", "filipa", "marina", "nikola"]))
print(solution(["mislav", "stanko", "mislav", "ana"], ["stanko", "ana", "mislav"]))

# 두번째 풀이
# 각 리스트를 정렬하여 완주자 리스트의 길이만큼 for문을 돌려 각 인덱스의 값이 일치하지 않는다면 리턴하고,
# 모두 일치한다면 참가자 리스트의 마지막 값을 리턴하는 식으로 해결함.

def solution(participant, completion):
    answer = ''

    participant.sort()
    completion.sort()

    for i in range(len(completion)):
        if participant[i] != completion[i]:
            return participant[i]

    return participant[-1]

print(solution(["leo", "kiki", "eden"], ["eden", "kiki"]))
print(solution(["marina", "josipa", "nikola", "vinko", "filipa"], ["josipa", "filipa", "marina", "nikola"]))
print(solution(["mislav", "stanko", "mislav", "ana"], ["stanko", "ana", "mislav"]))